name: Upload vs-mlrt-cuda dependencies

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'which tag to upload to'
        required: true
        default: 'v100'
  workflow_call:
    inputs:
      tag:
        description: 'which tag to upload to'
        required: true
        type: string
    secrets:
      REPO_TOKEN:
        required: true

jobs:
  build-windows:
    runs-on: windows-2025
    outputs:
      runID: ${{ steps.output.outputs.runID }}

    defaults:
      run:
        shell: bash

    steps:
    - name: Download cuDNN inference library
      run: curl -LJ https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-9.12.0.46_cuda12-archive.zip -o cudnn.zip

    - name: Extract cuDNN library
      run: unzip cudnn.zip

    - name: Move cuDNN library
      run: |
        mkdir -p vsmlrt-cuda
        mv cudnn-windows-*/bin/*.dll vsmlrt-cuda/ -v
        # rm vsmlrt-cuda/cudnn_*_train*.dll -v

    - name: Download TensorRT library
      run: |
        curl -L -o trt.zip https://developer.nvidia.com/downloads/compute/machine-learning/tensorrt/10.13.0/zip/TensorRT-10.13.0.35.Windows.win10.cuda-12.9.zip

    - name: Extract TensorRT library
      run: |
        unzip trt.zip
        mv TensorRT-*/ TensorRT/

    - name: Move TensorRT library
      run: mv TensorRT/lib/*.dll vsmlrt-cuda -v

    - name: Download CUDA Libraries
      shell: cmd
      run: |
        curl -s -o cuda_installer.exe -L https://developer.download.nvidia.com/compute/cuda/12.9.1/network_installers/cuda_12.9.1_windows_network.exe
        cuda_installer.exe -s cudart_12.9 cublas_12.9 cufft_12.9 cupti_12.9 nvrtc_12.9

    - name: Move CUDA Libraries
      shell: cmd
      run: |
        move "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.9\extras\CUPTI\lib64\cupti*.dll" vsmlrt-cuda
        move "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.9\bin\*.dll" vsmlrt-cuda
        del vsmlrt-cuda\cudart32*.dll

    - name: Download TensorRT-RTX library
      run: |
        curl -L -o trt-rtx.zip https://developer.nvidia.com/downloads/trt/rtx_sdk/secure/1.1/TensorRT-RTX-1.1.1.26.Windows.win10.cuda-12.9.zip

    - name: Extract TensorRT-RTX library
      run: |
        unzip trt-rtx.zip
        mv TensorRT-RTX-*/ TensorRT-RTX/

    - name: Move TensorRT-RTX library
      run: |
        mv TensorRT-RTX/bin/tensorrt_rtx.exe vsmlrt-cuda -v
        mv TensorRT-RTX/lib/*.dll vsmlrt-cuda -v

    - name: Setup VC commands
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64

    - name: Copy VC Runtime Libraries
      shell: bash
      run: |
        cd vsmlrt-cuda
        while true; do
          changed=false
          for dll in *.[dD][lL][lL]; do
             for dep in $(dumpbin -dependents "$dll" | grep -o -i '\<\(vc\|msvc\)[a-z0-9_-]*\.dll'); do
                echo "finding $dep for $dll"
                if ! test -f ./"$dep"; then
                  changed=true
                  src="$(where "$dep" | grep -i 'MSVC' | head -1)"
                  echo "copying $src for $dep"
                  test -f "$src" || exit 1
                  cp -f "$src" .
                fi
             done
          done
          $changed || break
        done

    - name: Compress
      run: |
        7z a -t7z -bb3 -mx=9 vsmlrt-cuda.7z vsmlrt-cuda

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: vsmlrt-cuda
        path: vsmlrt-cuda.7z
        retention-days: 1
        compression-level: 0

    - name: Rename release asset
      run: |
        mv vsmlrt-cuda.7z vsmlrt-cuda.${{ github.event.inputs.tag}}.7z

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.tag }}
        files: vsmlrt-cuda.${{ github.event.inputs.tag }}.7z
        fail_on_unmatched_files: true
        generate_release_notes: false
        prerelease: true
